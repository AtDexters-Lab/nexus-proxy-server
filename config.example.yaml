# Address for the backend hub to listen on for WebSocket connections.
backendListenAddress: ":8443"

# Address for the peer hub to listen on for mTLS-secured connections from other Nexus nodes.
peerListenAddress: ":8444"

# --- Hub TLS Configuration ---
# Choose ONE of the following methods: Automatic (recommended) or Manual.

# --- Automatic TLS (Recommended) ---
# The server will automatically obtain and renew a TLS certificate from Let's Encrypt.
# The server must be reachable from the public internet on port 80.
hubPublicHostname: "nexus.example.com"

# Optional: Directory to cache the ACME certificates.
# If omitted, defaults to a directory named "acme_certs" in the current working directory.
# acmeCacheDir: "/var/lib/nexus/certs"


# --- Manual TLS ---
# Manually provide your own TLS certificate and key files.
# hubTlsCertFile: "/path/to/your/fullchain.pem"
# hubTlsKeyFile: "/path/to/your/privkey.pem"


# Ports to listen on for public client traffic.
# Port 80 is treated as L7 HTTP, all others as L4 TCP.
relayPorts:
  - 443
  - 80

# Time in seconds that a client connection can be idle before being closed.
# Set to 0 to disable idle timeouts.
idleTimeoutSeconds: 60

# A secret used to authenticate connections with backends.
# Backends must present a valid JWT signed with this secret.
backendsJWTSecret: "a-very-strong-jwt-secret-for-the-central-authorizer"

# Peer-to-peer mesh configuration.
# A map of other Nexus nodes that this node will connect to.
peers:
  - "wss://nexus-eu.example.com:8444/mesh"
  - "wss://nexus-ap.example.com:8444/mesh"

# Peer authentication settings using mutual TLS (mTLS).
peerAuthentication:
  # An array of domain suffixes. An incoming peer connection will only be
  # accepted if it presents a valid TLS certificate for a domain name
  # ending in one of these suffixes.
  trustedDomainSuffixes:
    - ".proxy.example.com"

